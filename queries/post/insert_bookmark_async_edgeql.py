# AUTOGENERATED FROM 'queries/user/insert_bookmark.edgeql' WITH:
#     $ gel-py --dir queries


from __future__ import annotations
import dataclasses
import gel
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class InsertBookmarkResult(NoPydanticValidation):
    id: uuid.UUID


async def insert_bookmark(
    executor: gel.AsyncIOExecutor,
    *,
    paper_id: str,
    email: str,
) -> InsertBookmarkResult | None:
    return await executor.query_single(
        """\
        update User filter .email = <str>$email set {
          bookmarks += {
            (select Paper::Post filter .paper_id = <str>$paper_id)
          }
        }\
        """,
        paper_id=paper_id,
        email=email,
    )
